<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRefrescarControlUsuario.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAIAAADTED8xAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAqGSURBVHhe7d2/ThvbGoZxLvOILnRIiaigckWVpEBU5Aa4
        BKBICpCCu5RRJKjoQsQujs4VnHezlrzZxozH4/nWfGt9z6/a7IBn8LxPYvN3539AYASA0AgAoREAQiMA
        hEYACG3nv0BgO38BgREAQiMAhEYACI0AEBoBIDQCQGgEgNAIAKERAEIjAIRGAAiNABAaASA0AkBoBIDQ
        CAChEQBCIwCERgAIjQAQGgEgNAJAaASA0AgAoREAQiMAhEYACI0AEBoBIDQCQGgEgNAIAKERAEIjAFvz
        +fzbFvTm+YZggwBsHR0d/WcLh4eH+YZggwBsEYBzBGCLAJwjAFsE4BwB2CIA5wjAFgE4RwC2CMA5ArBF
        AM4RgC0CcI4AbBGAcwRgiwCcIwBbBOAcAdgiAOcIwBYBOEcAtgjAOQKwRQDOEYAtAnCu5QCenp4uLy//
        /PmTX55C1QHortMdqLsxv9yiZgPQZfvy5Ys29Pnz5wkbqDcA3Wm663QOZ2dnDTfQZgCL9ScTNlBpAIv1
        Jw030GAAS+tPpmqgxgCW1p+02kBrAaxcfzJJA9UFsHL9SZMNNBVAx/qT8g3UFUDH+pP2GmgngLXrTwo3
        UFEAa9efNNZAIwH0XH9SsoFaAui5/qSlBloIYKP1J8UaqCKAjdafNNNA9QEMWH9SpgH/AQxYf9JGA3UH
        MHj9SYEGnAcweP1JAw1UHMCW60+sG/AcwJbrT2pvoNYARll/YtqA2wBGWX9SdQNVBjDi+hO7BnwGMOL6
        k3obqC+A0defGDXgMIDR159U2kB9AVxeXua7fGwWDXgLwGj9ycXFRT5MPeoLwPQSjt6AqwDquuvKqPI5
        QEUX0k8ArH+lKgOQWi6nkwBY/1tqDUCquKgeAmD9HSoOQPxf2skDYP3d6g5AnF/gaQNg/WtVH4B4vswT
        BsD6+2ghAHF7sacKgPX31EgA4vOSTxIA6++vnQDE4YUvHwDr30hTAYi3y184ANa/qdYCEFcjKBkA6x+g
        wQDEzxSKBcD6h2kzAHEyiDIBsP7Bmg1APMyiQACsfxstByCTj8M6ANa/pcYDkGknYhoA699e+wHIhEOx
        C4D1jyJEADLVXIwCYP1jiRKATDIaiwBY/4gCBSDlp7MygL29vYODg9ls9vGZ/kMv6n/mP37hdQCsf1yx
        ApDCA0oB7O/vn56eXl1d3d3dPT4+5j97RX+kV9Cr6ZX1JnrDpQBY/+jCBSAlZ3R9ff3r16/8wob0hnrz
        /ALrtxExADEd08nJST7MqHSz+QBjC7t+CRqAGDVwfHw8+K/8brpZ3Xg+zHgir1/iBiDjNvD+/fuXj1iM
        6BA6UD7k1oKvX0IHIKM0sLu7e35+/vv373yjxnQgHU4HzYcfivVL9ABkywbevXv3/fv3fFsF6aA6dD6J
        zbH+hAD+NrgBPRr5+fNnvpXidOhhD4dY/wIBZAMamM1mDw8P+e0nohPQaeQT6of1v0QA/9ioAc2u41Na
        Jek0+jfA+pcQwL/0bEAPPCb/u/8lnUyfx0Ks/zUCWLa2AT31nPBx/1t0St3PiVn/SgSwQkcDu7u7k3zM
        pw+d2FsfG2X9byGA1d5q4Pz8PL+GSzq9fKIvsP4OBPCm1w3ocXaxz3YNo9NbejLA+rsRQJelBgp8pcP2
        bm5u8umy/h4IYI1FA8fHx/l/uZe+Zo7190EA62lGJycnRl/jaUGnqhNm/X0QAEIjAIRGAAhtygDm8/lR
        Dar44M9rOu38DvimGeQznsKUAXz79u35g3XeVfT09yWddn4HfPv69Ws+4ykQwBr7+/v5dCuUfraKcwTg
        2unpaT7dCunk87vhGAG4dnV1lU+3Qjr5/G44RgCu3d3d5dOt0P39fX43HCMA15x829cwOvn8bjhGAH7t
        7e3lc63Wyp+56woB+HVwcJDPtVp6F/I74xUB+DWbzfK5VmvTnxlRHgH49fHjx3yu1fr06VN+Z7wiAL8I
        oAAC8IuHQAUQgF88CS6AAPziw6AFEIBrfCLMGgG4xpdCWCMA1/hiOGsE4BpfDm2NAFzjG2KsEYB3fEuk
        qbgBzOfzwxrU+03x+R3wLe43xQOTIwCERgAIjQDW44fjNowA1tCM+PHoDSOALov1J/yCjPYQwJuW1i/+
        f0XS4+Pjhw8f8uk+o4FuBLDa6/Un/JK8xhDACm+tXzz/mtTb21t+TeqmCGBZx/oTflF2SwjgX9auP9GT
        gYeHh/w2Duhkln476ko08BoB/KPn+pPZbObkm8V0Gv2/850GlhBAttH6E81u8n8HdAKb/twHGniJAP42
        YP2JHnhM+HxAh+7zyOc1GlgggOHrT/TUc5KPC93e3nY/6+1GA0n0ALZcf7K7u3t+fl7sc2R60K/DvfUR
        z/5oQEIHMMr6F/Ro5ObmJt+0GR1i6XO926CBuAGMu/6F4+Njo68b1c2mr3IbV/AGggZgtP7k5OQkH2ZU
        utl8gLFFbiBiAKbrXxrT9fX14H8Q9IYvv/605GnHES6AwjM6OjrS/9/f3z89Pb26urq/v+/49Jn+SK+g
        V9Mrp59ocnh4mP/sGQ2MLlYA5QeUAliyt7d3cHAwm80+PdN/6MWVP8V2KQChgXEFCmCS6awMoL/XAQgN
        jChKAFONxiIAoYGxhAhgwrkYBSA0MIr2A5h2KHYBCA1sr/EAJp+IaQBCA1tqOQAP47AOQGhgG80G4GQW
        BQIQGhiszQD8DKJMAEIDwzQYgKspFAtAaGCA1gLwNoKSAQgNbKqpABxe/sIBCA1spJ0AfF748gEIDfTX
        SABuL/kkAQgN9NRCAJ4v9lQBCA30UX0Azi/zhAEIDaxVdwD+L/C0AQgNdKs4gCou7eQBCA10qDWAWi6q
        hwCEBt5SZQAVXU4nAQgNrFRfAHVdSD8BCA28Vl8Al5eX+S4fm8UldBWAmDZwcXGRD1OP+gJ4eno6OzvL
        d/l4jP4C8xaAGDWgi6JLk49RjyqfA4zegN0/3w4DkNEbqHT9UmUAMmIDdusXnwHIiA3Uu36pNQAZpQHT
        9YvbAGSUBqpev1QcgGzZgPX6xXMAsmUDta9f6g5ABjdQYP3iPAAZ3EAD65fqA5ABDZRZv/gPQAY00Mb6
        pYUAZKMGiq1fqghANmqgmfVLIwFIzwZKrl9qCUB6NtDS+qWdAGRtA4XXLxUFIGsbaGz90lQA0tFA+fVL
        XQFIRwPtrV9aC0BWNjDJ+qW6AGRlA02uXxoMQJYamGr9UmMAstRAq+uXNgOQRQMTrl8qDUAWDTS8fmk2
        ANFlu7i4mHD9Um8AortOd2DD65eWA/Cg6gAiIABbBOAcAdgiAOcIwBYBOEcAtgjAOQKwRQDOEYAtAnCO
        AGwRgHMEYIsAnCMAWwTgHAHYIgDnCMAWAThHALYIwDkCsEUAzhGALQJwjgBsEYBzBGCLAJwjAFvz+fzr
        FvTm+YZggwAQGgEgNAJAaASA0AgAoREAQiMAhEYACI0AEBoBIDQCQGgEgNAIAKERAEIjAIRGAAiNABAa
        ASA0AkBoBIDQCAChEQBCIwCERgAIjQAQGgEgNAJAaASA0AgAoREAQiMAhEYACI0AEBoBILSdX0BgOz+A
        wAgAoREAQiMAhEYACI0AENiPH/8HaS5Qaw4r3bQAAAAASUVORK5CYII=
</value>
  </data>
</root>